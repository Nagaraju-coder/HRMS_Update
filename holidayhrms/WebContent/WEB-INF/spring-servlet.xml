<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>multipart/form-data</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>

     
    </mvc:annotation-driven>
    <context:component-scan base-package="controllers" />

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <!-- DataSource configuration -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://192.168.110.48:5432/plf_training" />
        <property name="username" value="plf_training_admin" />
        <property name="password" value="pff123" />
    </bean>
    
    <!-- EntityManager configuration -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        p:persistenceUnitName="myPersistenceUnit"
        p:dataSource-ref="dataSource">
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="true" />
                <property name="showSql" value="true" />
            </bean>
        </property>
        <property name="packagesToScan" value="models" />
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect" />
                <entry key="hibernate.show_sql" value="true" />
                <!-- Additional Hibernate properties can be added here -->
            </map>
        </property>
    </bean>
   
   
    <!-- Enable transactional support for EntityManager -->
    <tx:annotation-driven transaction-manager="jpaTransactionManager" />
    
    <!-- EntityManager configuration -->
    <bean id="entityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- Configure the Hibernate transaction manager -->
    <bean id="jpaTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
  
    <!-- Dependency Injection Configuration -->
  <bean id="holidayDAO" class="DAO.HolidayDAOImpl" />
    <bean id="app" class="models.ApplyPermissions" />
    <bean id="cKey" class="models.PermissionCompositeKey" />
      <bean id="apdi" class="DAO.ApplyPermissionDaoImpl" />
    
    <bean id="ed" class="DAO.EmployeeDAOImpl" />
    <bean id="cd" class="DAO.CandidateDAOImpl" />
    <bean id="mp" class="org.modelmapper.ModelMapper" />
    <bean id="idao" class="DAO.InductionDAOImpl" />
     <bean id="induction" class="models.Induction" />
    <bean id="docServ" class="service.EmploymentInductionDocumentService" />
    <bean id="indServ" class="service.EmploymentInductionService" />
    <bean id="docDAO" class="DAO.EmploymentInductionDocDAOImpl" />
    <bean id="document" class="models.EmploymentInductionDocument" />
    <bean id="employeeLeaveModel" class="models.EmployeeLeaveModel" scope="prototype"/>
    <bean id="leaveRequest" class="models.EmployeeLeaveRequest" autowire="byName" />
    <bean id="leaveRequestId" class="models.EmployeeLeaveRequestId" autowire="byName" />
    <bean id="gson" class="com.google.gson.Gson" autowire="byName" />
    <bean id="employeeService" class="service.EmployeeLeaveService" autowire="byName" />
    <bean id="leaveValidation" class="models.LeaveValidationModel" autowire="byName"/>
    <bean id="approvedLeaveModel" class="models.ApprovedLeaveModel" scope="prototype"/>
    <bean id="attendance" class="models.EmployeeAttendance" autowire="byName" />
    <bean id="attendanceEvent" class="models.AttendanceEvent" scope="prototype"></bean>
	<bean id="attendanceId" class="models.EmployeeAttendanceId" autowire="byName" />
	<bean id="response" class="models.EmployeeRequestResult" autowire="byName" />
	<bean id="jobGradeLeavesOutModel" class="models.input.output.JobGradeLeavesOutModel" scope="prototype" />
	<bean id="empserv" class="service.EmpService" /> 
    <bean id="empauto" class="models.Employee" /> 
    <bean id="empdao" class="DAO.EmpDAO" />
    <bean id="payRollservice" class="service.PayRollServiceImpl" autowire="byName"/>
    <bean id="payRollOutput" class="models.input.output.EmployeePayRollOutputModel" autowire="byName"/>
    <bean id="payRollInput" class="models.input.output.EmployeePayRollInputModel" autowire="byName"/>
    <bean id="payrollDAO" class="DAO.PayRollDAOImpl" autowire="byName"/>
    <bean id="empPaySlip" class="models.EmployeePayslip" autowire="byName"/>
    <bean id="rd" class="DAO.ReferenceDAOImpl" />
    <bean id="rs" class="service.ReferenceServiceImpl" />
    <bean id="doc" class = "models.EmployeeRefDocuments"/>
   <bean id="empservice" class="service.EmployeeLoginService"/>
    
     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!-- Set the maximum allowed file size (in bytes) -->
    <property name="maxUploadSize" value="10485760"/> <!-- 10MB -->
    <!-- Set the maximum allowed size for a request (in bytes) -->
    <property name="maxUploadSizePerFile" value="5242880"/> <!-- 5MB -->
    </bean>
    
    
  <!-- updated -->
  <bean id="offerLetterDAO" class="DAO.OfferLetterDAOImpl"  autowire="byName" />
  <bean id="employeeAttendanceService" class="service.EmployeeAttendanceService" autowire="byName"/>
	<bean id="employeeAttendanceDAO" class="DAO.EmployeeAttendanceDAOImpl" autowire="byName" />
	  <bean id="empoffdocComposite" class="models.EmploymentOfferDocComposite" scope="prototype"/>
    <bean id="employmentofferdocument" class="models.EmploymentOfferDocument" scope="prototype"/>
        <bean id="leaveRequestDAO" class="DAO.EmployeeLeaveRequestDAOImpl" autowire="byName"/>
    
    
</beans>